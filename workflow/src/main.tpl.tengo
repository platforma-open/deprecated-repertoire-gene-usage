// gene usage
ll := import("@platforma-sdk/workflow-tengo:ll")
wf := import("@platforma-sdk/workflow-tengo:workflow")
exec := import("@platforma-sdk/workflow-tengo:exec")
assets := import("@platforma-sdk/workflow-tengo:assets")
render := import("@platforma-sdk/workflow-tengo:render")
pframes := import("@platforma-sdk/workflow-tengo:pframes")
json := import("json")

mixcrTpl := assets.importTemplate(":mixcr")
importTsvTpl := assets.importTemplate(":importTsv")

wf.prepare(func(args){
	return {
		clns: wf.resolve(args.clnsRef)
	}
})

wf.body(func(args) {
	mixcr := render.create(mixcrTpl, args)

	importTsv := render.create(importTsvTpl, {
		vUsageTsv: mixcr.output("vUsageTsv"),
		jUsageTsv: mixcr.output("jUsageTsv"),
		vFamilyUsageTsv: mixcr.output("vFamilyUsageTsv"),
		jFamilyUsageTsv: mixcr.output("jFamilyUsageTsv"),
		isotypeUsageTsv: mixcr.output("isotypeUsageTsv"),
		sampleIdAxisSpec: args.clns.spec.axesSpec[0]
	})

	vUsage := importTsv.output("vUsage")
	jUsage := importTsv.output("jUsage")
	vFamilyUsage := importTsv.output("vFamilyUsage")
	jFamilyUsage := importTsv.output("jFamilyUsage")
	isotypeUsage := importTsv.output("isotypeUsage")

	return {
		outputs: {
			vUsage: pframes.exportFrame(vUsage),
			jUsage: pframes.exportFrame(jUsage),
			vFamilyUsage: pframes.exportFrame(vFamilyUsage),
			jFamilyUsage: pframes.exportFrame(jFamilyUsage)
			// isotypeUsage: pframes.exportFrame(isotypeUsage) // @TODO uncomment after https://www.notion.so/mixcr/pfconv-Does-not-work-with-empty-input-csv-file-1303a83ff4af8066ab73fb04358b0725?pvs=4
		},

		exports: {
			vUsage: vUsage,
			jUsage: jUsage,
			vFamilyUsage: vFamilyUsage,
			jFamilyUsage: jFamilyUsage
			// isotypeUsage: isotypeUsage  // @TODO uncomment after https://www.notion.so/mixcr/pfconv-Does-not-work-with-empty-input-csv-file-1303a83ff4af8066ab73fb04358b0725?pvs=4
		}
	}
})
